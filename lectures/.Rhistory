threshold
threshold = 0.05
threshold
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
for(threshold in seq(0.05, 0.99, 0.05)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
plot(DET, type = "l", col = "blue")
}
?xlim
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
plot(DET, xlim = max(FAR), main = "Detection Error Tradeoff" )
}
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
plot(DET, xlim(max(FAR)), main = "Detection Error Tradeoff" )
}
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
plot(DET, xlim = range(max(FAR)), main = "Detection Error Tradeoff" )
}
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(DET, xlim = range(max(FAR)), main = "Detection Error Tradeoff" )
View(DET)
View(DETcurve)
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
}
DET <- data.frame(FAR, FRR)
plot(DET, xlim = range(max(FAR)), main = "Detection Error Tradeoff" )
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
plot(DET, xlim = range(max(FAR)), main = "Detection Error Tradeoff" )
}
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
plot(DET, xlim = range(0, max(FAR)), main = "Detection Error Tradeoff" )
}
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(DET, xlim = range(0, max(FAR)), ylim = range(0, max(FRR)), main = "Detection Error Tradeoff" )
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
plot(DET, xlim = range(0, max(FAR)), ylim = range(0, max(FRR)), main = "Detection Error Tradeoff" )
}
View(DET)
View(DET)
View(DET)
knitr::opts_chunk$set(echo = TRUE)
scores <- read.csv("hw1_list.csv")
scores$Match <- ifelse(substr(scores$sequence1,1,6) == substr(scores$sequence2,1,6),"Genuine", "Imposter")
genuine.scores <- subset(scores, Match == "Genuine")
imposter.scores <- subset(scores, Match == "Imposter")
hist(genuine.scores$score, col = rgb(1,0,0,0.5), main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency", freq = FALSE)
hist(imposter.scores$score, col = rgb(0,0,1,0.5), add = T, freq = FALSE)
legend("top", c("Genuine", "Imposter"), fill=c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)))
genuine.sd <- sd(genuine.scores$score)
imposter.sd <- sd(imposter.scores$score)
genuine.mean <- mean(genuine.scores$score)
imposter.mean <- mean(imposter.scores$score)
dprime <- (sqrt(2) * abs((genuine.mean)-(imposter.mean)))/sqrt((genuine.sd^2)+(imposter.sd^2))
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
plot(DET, xlim = range(0, max(FAR)), ylim = range(0, max(FRR)), main = "Detection Error Tradeoff" )
}
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(DET, xlim = range(0, max(FAR)), ylim = range(0, max(FRR)), main = "Detection Error Tradeoff" )
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(DET, xlim = range(0, max(FAR)) )
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(DET)
?plog
?plot
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(FAR, FRR)
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(FAR, FRR, xlim = max(FAR))
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(FAR, FRR, xlim = range(0,max(FAR)))
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(FAR, FRR, xlim = max(FAR))
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = max(FAR))
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0,1))
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
plot(FAR, FRR, xlim = range(0,1))
}
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0,1))
FAR
FRR
FAR <- c()
FRR <- c()
for(threshold in seq(0.00, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0,1))
FAR <- c()
FRR <- c()
for(threshold in seq(0.00, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0,1), type = "l")
FAR <- c()
FRR <- c()
for(threshold in seq(0.00, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0.4,1), type = "l")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0.2 ,1), type = "l")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(1,0.2), type = "l")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0.2 ,1), type = "l")
?hist
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0.2 ,1), type = "o")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0.2 ,1), type = "o")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0 ,1), ylim = range (0, 1)type = "o")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0 ,1), ylim = range (0, 1), type = "o")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0 , 0.8), ylim = range (0, 0.5), type = "l", col = "blue")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
?line
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- 1+x
genuine.sd <- sd(genuine.scores$score)
imposter.sd <- sd(imposter.scores$score)
genuine.mean <- mean(genuine.scores$score)
imposter.mean <- mean(imposter.scores$score)
dprime <- (sqrt(2) * abs((genuine.mean)-(imposter.mean)))/sqrt((genuine.sd^2)+(imposter.sd^2))
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
for(x in seq(0.0, 0.8, 0.1)) {
y <- x
}
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
plot(x, y, type = "l", col = "red")
?line
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
for(x in seq(0.0, 0.8, 0.1)) {
y <- x
}
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
line(x, y, col = "red")
x
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- seq(0.0, 0.8, 0.1)
y <- seq(0.0, 0.8, 0.1)
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
line(x, y, col = "red")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- seq(0.0, 0.8, 0.1)
y <- seq(0.0, 0.8, 0.1)
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
line(x, y)
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- seq(0.0, 0.8, 0.1)
y <- seq(0.0, 0.8, 0.1)
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
lines(x, y, col = "red")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- seq(0.0, 0.4, 0.1)
y <- seq(0.0, 0.4, 0.1)
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
lines(x, y, col = "red")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- seq(0.0, 0.3, 0.1)
y <- seq(0.0, 0.3, 0.1)
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
lines(x, y, col = "red")
install.packages("nycflights13")
install.packages("tidyverse")
install.packages("ggplot2")
library(nycflights13)
library(tidyverse)
library(ggplot2)
flights$dep_delay > 60
# returns T/F
mean(flights$dep_delay > 60)
# returns N/A because you can't get an average of booleans
mean(flights$dep_delay > 60, na.rm = TRUE)
#returns number
flights
View(flights)
View(flights)
select(dep_delay)
flights %>%
select(dep_delay)
flights %>%
select(dep_delay)
filter(dep_delay > 60)
flights %>%
select(dep_delay) %>%
filter(dep_delay > 60)
flights %>%
select(dep_delay) %>%
filter(dep_delay > 60) %>%
group_by(carrier)
summarise(arrange(carrier))
flights %>%
select(dep_delay) %>%
filter(dep_delay > 60) %>%
group_by(carrier)
flights$carrier
flights %>%
select(dep_delay) %>%
filter(dep_delay > 60) %>%
group_by(carrier) %>%
summarize(mean(flights$carrier), na,rm=TRUE)
flights %>%
group_by(carrier) %>%
summarize(carrier.avg = mean(dep_delay > 60 , na,rm=TRUE)) %>%
arrange(desc(carrier.avg)) %>%
mutate(Rank = rank(-carrier.avg))
elayed more than an hour. (dep delay)
flights %>%
group_by(carrier) %>%
summarize(carrier.avg = mean(dep_delay > 60 , na.rm=TRUE)) %>%
arrange(desc(carrier.avg)) %>%
mutate(Rank = rank(-carrier.avg))
flights %>%
group_by(carrier) %>%
summarize(carrier.avg = mean(dep_delay > 60 , na.rm=TRUE)) %>%
arrange(desc(carrier.avg)) %>%
mutate(Rank = rank(-carrier.avg)) %>%
filter(Rank <= 10) %>%
ggplot(mapping = aes(x = carrier, carrier.avg)) + geom_bar(stat = "identity")
# Construct a bar graph of the "Top 10" carriers with the highest proportion
# of flights delayed more than an hour. (dep delay)
flights %>%
group_by(carrier) %>%
summarize(carrier.avg = mean(dep_delay > 60 , na.rm=TRUE)) %>%
arrange(desc(carrier.avg)) %>%
mutate(Rank = rank(-carrier.avg)) %>%
filter(Rank <= 10) %>%
ggplot(mapping = aes(x = reorder(carrier, carrier.avg), carrier.avg)) + geom_bar(stat = "identity")
flights %>%
group_by(carrier) %>%
summarize(carrier.avg = mean(dep_delay > 60 , na.rm=TRUE)) %>%
arrange(desc(carrier.avg)) %>%
mutate(Rank = rank(-carrier.avg)) %>%
filter(Rank <= 10) %>%
ggplot(mapping = aes(x = reorder(carrier, carrier.avg), carrier.avg)) +
geom_bar(stat = "identity", aes(fill = carrier))
## Create a function
favNum <- function(x) {
num <- paste(c("Alex's favorite number is", x, "."), collapse = " ")
return(num)
}
favNum(12)
t.test(1)
t.test(10()
z
t.test(10)
?t.test
t.test(10, 30, 50)
t.test2 <- function(x, mu) {
x.bar  <- mean(x, na.rm =TRUE)
s      <- sd(x)
n      <- length(x)
t.stat <- (x.bar-mu)/(s/sqrt(n))
p.val <- pt(t.stat, n-1)
return(p.val)
}
hist(rbinom(10000, 14, .75))
hist(rbinom(10000, 14, .75)/14)
binom.test(10, 14, .75)
pbinom(10, 14, .75)*2
pnorm(.71, mean=.75, sd = sqrt(.75*.25/14))
pnorm(.71, mean=.75, sd = sqrt(.75*.25/14))*2
setwd("~/Developments/math216-datascience/lectures")
taboo <- read.csv("Taboo.csv")
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
taboo <- read.csv("Taboo.csv")
males <- taboo %>%
filter(Gender == "M") %>%
select(Marijuana)
females <- taboo %>%
filter(Gender == "F") %>%
select(Marijuana)
prop.test(males, females)
prop.test(x = c(15,14), n = c(52,48))
