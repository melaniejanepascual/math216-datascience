FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
for(threshold in seq(0.05, 0.99, 0.05)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
plot(DET, type = "l", col = "blue")
}
?xlim
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
plot(DET, xlim = max(FAR), main = "Detection Error Tradeoff" )
}
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
plot(DET, xlim(max(FAR)), main = "Detection Error Tradeoff" )
}
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
plot(DET, xlim = range(max(FAR)), main = "Detection Error Tradeoff" )
}
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(DET, xlim = range(max(FAR)), main = "Detection Error Tradeoff" )
View(DET)
View(DETcurve)
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
}
DET <- data.frame(FAR, FRR)
plot(DET, xlim = range(max(FAR)), main = "Detection Error Tradeoff" )
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
plot(DET, xlim = range(max(FAR)), main = "Detection Error Tradeoff" )
}
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
plot(DET, xlim = range(0, max(FAR)), main = "Detection Error Tradeoff" )
}
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(DET, xlim = range(0, max(FAR)), ylim = range(0, max(FRR)), main = "Detection Error Tradeoff" )
for(threshold in seq(0.05, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
plot(DET, xlim = range(0, max(FAR)), ylim = range(0, max(FRR)), main = "Detection Error Tradeoff" )
}
View(DET)
View(DET)
View(DET)
knitr::opts_chunk$set(echo = TRUE)
scores <- read.csv("hw1_list.csv")
scores$Match <- ifelse(substr(scores$sequence1,1,6) == substr(scores$sequence2,1,6),"Genuine", "Imposter")
genuine.scores <- subset(scores, Match == "Genuine")
imposter.scores <- subset(scores, Match == "Imposter")
hist(genuine.scores$score, col = rgb(1,0,0,0.5), main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency", freq = FALSE)
hist(imposter.scores$score, col = rgb(0,0,1,0.5), add = T, freq = FALSE)
legend("top", c("Genuine", "Imposter"), fill=c(rgb(1,0,0,0.5), rgb(0,0,1,0.5)))
genuine.sd <- sd(genuine.scores$score)
imposter.sd <- sd(imposter.scores$score)
genuine.mean <- mean(genuine.scores$score)
imposter.mean <- mean(imposter.scores$score)
dprime <- (sqrt(2) * abs((genuine.mean)-(imposter.mean)))/sqrt((genuine.sd^2)+(imposter.sd^2))
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
plot(DET, xlim = range(0, max(FAR)), ylim = range(0, max(FRR)), main = "Detection Error Tradeoff" )
}
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(DET, xlim = range(0, max(FAR)), ylim = range(0, max(FRR)), main = "Detection Error Tradeoff" )
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(DET, xlim = range(0, max(FAR)) )
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(DET)
?plog
?plot
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(FAR, FRR)
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(FAR, FRR, xlim = max(FAR))
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(FAR, FRR, xlim = range(0,max(FAR)))
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(FAR, FRR, xlim = max(FAR))
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = max(FAR))
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0,1))
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
plot(FAR, FRR, xlim = range(0,1))
}
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0,1))
FAR
FRR
FAR <- c()
FRR <- c()
for(threshold in seq(0.00, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0,1))
FAR <- c()
FRR <- c()
for(threshold in seq(0.00, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0,1), type = "l")
FAR <- c()
FRR <- c()
for(threshold in seq(0.00, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0.4,1), type = "l")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0.2 ,1), type = "l")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(1,0.2), type = "l")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0.2 ,1), type = "l")
?hist
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0.2 ,1), type = "o")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0.2 ,1), type = "o")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0 ,1), ylim = range (0, 1)type = "o")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0 ,1), ylim = range (0, 1), type = "o")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0 , 0.8), ylim = range (0, 0.5), type = "l", col = "blue")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
?line
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- 1+x
genuine.sd <- sd(genuine.scores$score)
imposter.sd <- sd(imposter.scores$score)
genuine.mean <- mean(genuine.scores$score)
imposter.mean <- mean(imposter.scores$score)
dprime <- (sqrt(2) * abs((genuine.mean)-(imposter.mean)))/sqrt((genuine.sd^2)+(imposter.sd^2))
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
for(x in seq(0.0, 0.8, 0.1)) {
y <- x
}
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
plot(x, y, type = "l", col = "red")
?line
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
for(x in seq(0.0, 0.8, 0.1)) {
y <- x
}
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
line(x, y, col = "red")
x
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- seq(0.0, 0.8, 0.1)
y <- seq(0.0, 0.8, 0.1)
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
line(x, y, col = "red")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- seq(0.0, 0.8, 0.1)
y <- seq(0.0, 0.8, 0.1)
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
line(x, y)
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- seq(0.0, 0.8, 0.1)
y <- seq(0.0, 0.8, 0.1)
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
lines(x, y, col = "red")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- seq(0.0, 0.4, 0.1)
y <- seq(0.0, 0.4, 0.1)
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
lines(x, y, col = "red")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- seq(0.0, 0.3, 0.1)
y <- seq(0.0, 0.3, 0.1)
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
lines(x, y, col = "red")
knitr::opts_chunk$set(echo = TRUE)
taboo <- read.csv("Taboo.csv")
setwd("~/Developments/math216-datascience/hw/hw2")
taboo <- read.csv("Taboo.csv")
taboo <- read.csv("Taboo.csv")
taboo <- read.csv("Taboo.csv")
View(taboo)
View(taboo)
install.packages("tidyverse")
library(tidyverse)
taboo <- read.csv("Taboo.csv")
View(taboo)
View(taboo)
taboo %>%
group_by(Gender) %>%
summarize(avg.sex = mean(Sex))
diamonds %>%
group_by(color) %>%
summarize(prop.expensive = mean(price > 10000))
diamonds$price > 10000
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
taboo <- read.csv("Taboo.csv")
ggplot(data = taboo, mapping = aes(x = Sex, y = Happiness)) + geom_point()
ggplot(data = taboo, mapping = aes(x = Happiness, y = Sex)) + geom_point()
ggplot(data = taboo, mapping = aes(x = Sex, y = Happiness)) + geom_point()
diamonds %>%
group_by(color) %>%
summarize(mean.price = mean(price))
house %>%
filter(between(Beds, 2, 3)) %>%  ## houses with 2/3 beds
arrange(Price) %>% ## organized by price, house 6 is the most expensive
ggplot(mapping = aes(Taxes, Price)) + geom_point() + geom_point(data = expensive.house, color = "red", size = 5)
expensive.house <- filter(house, case == 6)
house %>%
filter(between(Beds, 2, 3)) %>%  ## houses with 2/3 beds
arrange(Price) %>% ## organized by price, house 6 is the most expensive
ggplot(mapping = aes(Taxes, Price)) + geom_point() + geom_point(data = expensive.house, color = "red", size = 5)
expensive.house <- filter(house, case == 6)
expensive.house <- filter(house, case == 6)
setwd("~/Developments/math216-datascience/lectures")
source('~/Developments/math216-datascience/lectures/house.R', echo=TRUE)
house %>%
filter(between(Beds, 2, 3)) %>%  ## houses with 2/3 beds
arrange(Price) %>% ## organized by price, house 6 is the most expensive
ggplot(mapping = aes(Taxes, Price)) + geom_point() + geom_point(data = expensive.house, color = "red", size = 5)
expensive.house <- filter(house, case == 6)
## Practice
library(tidyverse)
library(ggplot2)
house <- read.table("House.txt", header = TRUE)
## Construct a data set with beds/baths/price and only cheap houses (<$100,000)
house %>%
select(Beds, Baths, Price) %>%
filter(Price < 100000)
## Construct data set only with columns starting with "B" and whose values
## for all cells are >= 2 and <= 4
house %>%
select(starts_with("b")) %>%
filter(between(Beds, 2, 4), between(Baths,2,4))
## Find the most expensive house with either 2 or 3 beds, then make a scatterplot
## of all houses vs. taxes with 2 or 3 beds
## and highlight this point (The most expensive house)
house %>%
filter(between(Beds, 2, 3)) %>%  ## houses with 2/3 beds
arrange(Price) %>% ## organized by price, house 6 is the most expensive
ggplot(mapping = aes(Taxes, Price)) + geom_point() + geom_point(data = expensive.house, color = "red", size = 5)
taboo %>%
filter(between(Beds, 2, 3)) %>%
arrange(Price) %>%
ggplot(mapping = aes(Taxes, Price)) + geom_point() + geom_point(data = expensive.house, color = "red", size = 5)
happy.taboo <- arrange(taboo, Happiness)
happiest.female <- filter(happy.taboo, gender == "F")
happy.taboo <- arrange(taboo, Happiness)
happiest.female <- filter(happy.taboo, Gender == "F")
happiest.female
no.alc <-
taboo %>%
filter(Alcohol == 0)
few.alc <-
taboo %>%
filter(Alcohol >= 1 & Alcohol <= 3)
lots.alc <-
taboo %>%
filter(Alcohol > 3)
ggplot(mapping = aes(Salary, Happiness)) + geom_point() +
geom_point(data = no.alc, color = "blue", size = 2) +
geom_point(data = few.alc, color = "green", size = 2) +
geom_point(data = lots.alc, color = "purple", size = 2)
no.alc <-
taboo %>%
filter(Alcohol == 0)
few.alc <-
taboo %>%
filter(Alcohol >= 1 & Alcohol <= 3)
lots.alc <-
taboo %>%
filter(Alcohol > 3)
taboo %>%
ggplot(mapping = aes(Salary, Happiness)) + geom_point() +
geom_point(data = no.alc, color = "blue", size = 2) +
geom_point(data = few.alc, color = "green", size = 2) +
geom_point(data = lots.alc, color = "purple", size = 2)
ggplot(data = taboo, mapping = aes(x = Gender, y = Marijuana)) + geom_point()
female <- filter(taboo, Gender == "F")
male <- filter(taboo, Gender == "M")
taboo %>%
ggplot(mapping = aes(Gender, Marijuana)) + geom_point() +
geom_point(data = female, color = "blue", size = 2) +
geom_point(data = male, color = "green", size = 2)
female <- filter(taboo, Gender == "F")
male <- filter(taboo, Gender == "M")
taboo %>%
ggplot(mapping = aes(Marijuana, Gender)) + geom_point() +
geom_point(data = female, color = "blue", size = 2) +
geom_point(data = male, color = "green", size = 2)
