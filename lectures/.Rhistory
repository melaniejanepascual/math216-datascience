summarise(arrange(carrier))
flights %>%
select(dep_delay) %>%
filter(dep_delay > 60) %>%
group_by(carrier)
flights$carrier
flights %>%
select(dep_delay) %>%
filter(dep_delay > 60) %>%
group_by(carrier) %>%
summarize(mean(flights$carrier), na,rm=TRUE)
flights %>%
group_by(carrier) %>%
summarize(carrier.avg = mean(dep_delay > 60 , na,rm=TRUE)) %>%
arrange(desc(carrier.avg)) %>%
mutate(Rank = rank(-carrier.avg))
elayed more than an hour. (dep delay)
flights %>%
group_by(carrier) %>%
summarize(carrier.avg = mean(dep_delay > 60 , na.rm=TRUE)) %>%
arrange(desc(carrier.avg)) %>%
mutate(Rank = rank(-carrier.avg))
flights %>%
group_by(carrier) %>%
summarize(carrier.avg = mean(dep_delay > 60 , na.rm=TRUE)) %>%
arrange(desc(carrier.avg)) %>%
mutate(Rank = rank(-carrier.avg)) %>%
filter(Rank <= 10) %>%
ggplot(mapping = aes(x = carrier, carrier.avg)) + geom_bar(stat = "identity")
# Construct a bar graph of the "Top 10" carriers with the highest proportion
# of flights delayed more than an hour. (dep delay)
flights %>%
group_by(carrier) %>%
summarize(carrier.avg = mean(dep_delay > 60 , na.rm=TRUE)) %>%
arrange(desc(carrier.avg)) %>%
mutate(Rank = rank(-carrier.avg)) %>%
filter(Rank <= 10) %>%
ggplot(mapping = aes(x = reorder(carrier, carrier.avg), carrier.avg)) + geom_bar(stat = "identity")
flights %>%
group_by(carrier) %>%
summarize(carrier.avg = mean(dep_delay > 60 , na.rm=TRUE)) %>%
arrange(desc(carrier.avg)) %>%
mutate(Rank = rank(-carrier.avg)) %>%
filter(Rank <= 10) %>%
ggplot(mapping = aes(x = reorder(carrier, carrier.avg), carrier.avg)) +
geom_bar(stat = "identity", aes(fill = carrier))
## Create a function
favNum <- function(x) {
num <- paste(c("Alex's favorite number is", x, "."), collapse = " ")
return(num)
}
favNum(12)
t.test(1)
t.test(10()
z
t.test(10)
?t.test
t.test(10, 30, 50)
t.test2 <- function(x, mu) {
x.bar  <- mean(x, na.rm =TRUE)
s      <- sd(x)
n      <- length(x)
t.stat <- (x.bar-mu)/(s/sqrt(n))
p.val <- pt(t.stat, n-1)
return(p.val)
}
View(favNum)
mj <- 3
paste(c("MJ", "likes", "the", "num", mj), collapse=" ")
mj.fav.num <- 3
paste(c("MJ", "likes", "the", "num", mj), collapse=" ")
#solution 2
super.dataset <- NULL
for (i in 1:3) {
# read in dataset
current.dataset <- read.csv(file = paste(c("dataset", i, ".csv"),
collapse=""))
# attach dataset to other datasets to make super dataset
super.dataset <- rbind(super.dataset, current.dataset)
}
library(tidyverse)
taboo <- read.csv("Taboo.csv")
males <- taboo %>%
filter(Gender == "M") %>%
select(Marijuana)
females <- taboo %>%
filter(Gender == "F") %>%
select(Marijuana)
prop.test(x = c(15,14), n = c(52,48))
## prop 1 = men, prop 2 = women
library(tidyverse)
taboo <- read.csv("Taboo.csv")
males <- taboo %>%
filter(Gender == "M") %>%
select(Marijuana)
females <- taboo %>%
filter(Gender == "F") %>%
select(Marijuana)
prop.test(x = c(15,14), n = c(52,48))
## prop 1 = men, prop 2 = women
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
taboo <- read.csv('Taboo.csv')
taboo %>%
group_by(Gender) %>%
summarize(mean.Marijuana = mean(Marijuana)) %>%
ggplot(mapping=aes(x=Gender, y=mean.Marijuana)) + geom_col() + coord_cartesian(ylim=c(0,1))
taboo %>%
group_by(Gender) %>%
summarize(mean.Cigarette = mean(Cigarette)) %>%
ggplot(mapping=aes(x=Gender, y=mean.Cigarette)) + geom_col()+ coord_cartesian(ylim=c(0,1))
?rbinom
?binom.test
?rbinom
?binom.test
binom.test(10, 14, .75)
pnorm(.71, mean=.75, sd = sqrt(.75*.25/14))*2
?pnorm
pnorm(.71, mean=.75, sd = sqrt(.75*.25/14))*2
?prop.test
t.test(m.sex, f.sex)
m.sex <- taboo %>%
filter(Gender == "M") %>%
select(Sex)
f.sex <- taboo %>%
filter(Gender == "F") %>%
select(Sex)
mean(m.sex$Sex)
mean(f.sex$Sex)
t.test(m.sex, f.sex)
t.test(difference, mu = 0)
dominant <- c(392, 278, 390, 287, 316, 318, 268, 380, 289, 393, 357, 293, 321, 360, 278)
nondominant <- c(350, 292, 423, 294, 316, 318, 292, 460, 299, 463, 345, 292, 339, 334, 267)
difference <- dominant - nondominant
mean(difference)
#checking if its caused by chance with a t test
t.test(difference, mu = 0)
difference <- dominant - nondominant
mean(difference)
t.test(dominant, nondominant)
?rnorm
#make a function for median function
median2 <- function(x) {
x <- sort(x, decreasing = FALSE)
mid <- (length(x) + 1)/2
if (mid %% 1 == 0) {
return (x[mid])
} else {
return (mean(c(x[mid-.5],x[mid+.5])))
}
}
median2(c(1,2,3,4,5))
house %>%
filter(between(Beds, 2, 3)) %>%  ## houses with 2/3 beds
arrange(Price) %>% ## organized by price, house 6 is the most expensive
ggplot(mapping = aes(Taxes, Price)) + geom_point() + geom_point(data = expensive.house, color = "red", size = 5)
expensive.house <- filter(house, case == 6)
library(tidyverse)
library(ggplot2)
house <- read.table("House.txt", header = TRUE)
setwd("~/Developments/math216-datascience/lectures")
library(tidyverse)
library(ggplot2)
house <- read.table("House.txt", header = TRUE)
house %>%
filter(between(Beds, 2, 3)) %>%  ## houses with 2/3 beds
arrange(Price) %>% ## organized by price, house 6 is the most expensive
ggplot(mapping = aes(Taxes, Price)) + geom_point() + geom_point(data = expensive.house, color = "red", size = 5)
expensive.house <- filter(house, case == 6)
house %>%
filter(between(Beds, 2, 3)) %>%  ## houses with 2/3 beds
arrange(Price) %>% ## organized by price, house 6 is the most expensive
ggplot(mapping = aes(Taxes, Price)) + geom_point() + geom_point(data = expensive.house, color = "red", size = 5)
expensive.house <- filter(house, case == 6)
## sorts ascending
diamonds %>%
filter(price > 10000) %>%
select(color, price, carat, depth) %>%
arrange(carat, depth)
SAT <- rnorm(100000, 600, 100)
mean.vector <- NULL
for(i in 1:100000){
mean.vector[i] <- mean(sample(SAT, 30))
}
hist(mean.vector)
100/sqrt(30)
pop.vector <- c(5,15,15,5,10,12,6.5,20,8,5,15,10,11,3,8)
hist(pop.vector)
## CLT says describes sample mean
for(i in 1:100000){
mean.vector[i] <- mean(sample(pop.vector, 30, replace = TRUE))
}
## replace=TRUE says you can reuse data
mean(pop.vector)
sd(pop.vector)
library(nycflights13)
library(tidyverse)
library(ggplot2)
View(flights)
View(flights)
early.flights <- filter(flights, sched_dep_time > dep_time )
early.flights
View(early.flights)
View(early.flights)
late flights <- filter(flights, dep_delay > 60)
late.flights <- filter(flights, dep_delay > 60)
late.flights
library(nycflights13)
library(tidyverse)
library(ggplot2)
## early flights
if(sched_dep_time > dep_time)
flights %>%
mutate(early = sched_dep_time > dep_time)
early.flights <- filter(flights, sched_dep_time > dep_time)
late.flights <- filter(flights, dep_delay > 60)
View(late.flights)
View(late.flights)
early.flights <- filter(flights, sched_dep_time > dep_time)
late.flights <- filter(flights, dep_delay > 60)
BOS.dest <- filter(flights, dest == "BOS")
BOS.arr <- filter(flights, origin == "BOS")
flights %>%
ggplot(mapping = aes(BOS.arr, BOS.dest)) + geom_point() +
geom_point(data = early.flights, color = "green") +
geom_point(data = late.flights, color = "blue")
flights %>%
group_by(month)
summarize(avg.delay = mean(month, na.rm=TRUE)) %>%
flights %>%
group_by(month)
summarize(avg.delay = mean(month, na.rm=TRUE))
flights %>%
group_by(month)
summarize(avg.delay = mean(dep_delay))
flights %>%
group_by(month)
summarize(delay.avg = mean(dep_delay, na.rm = TRUE))
flights %>%
group_by(month)
summarize(delay.avg = mean(dep_delay, na.rm = TRUE))
flights %>%
group_by(month)
flights %>%
group_by(month)
summarize(mean(dep_delay, na.rm = TRUE))
select(dep_delay)
library(nycflights13)
library(tidyverse)
library(ggplot2)
dep.delay.avg <- mean(dep_delay)
ggplot(data = diamonds, mapping = aes(carat, price)) +
geom_point(aes(color=color, size = depth)) +
ggtitle("Roberts Graph") + xlab("CARAT") + ylab("PRICE") +
scale_x_continuous(limits=c(0,10), breaks = c(0,2,4,6,8,10)) +
scale_y_continuous(limits=c(0,100000), breaks = c(0,2,4,6,8,10))
?flights
flights %>%
filter(carrier == "DL")
flights %>%
filter(carrier == "DL") %>%
group_by(dep_delay) %>%
summarize(DL.delay.avg = mean(dep_delay, na.rm = TRUE))
flights %>%
filter(carrier == "DL") %>%
group_by(dep_delay)
DL.delay.avg = mean(dep_delay, na.rm = TRUE
vector1 <- c(10, 20, 30, 40, 50)
vector2 <- c(23, 34, 54, 65, 69)
random.num <- seq(from = 0, to = 100, by = 1)
scatter.it <- function(vector1, vector2) {
if(random.num >= 50) {
ggplot(data = diamonds, mapping = aes(vector1, vector2)) +
geom_point()) +
vector1 <- c(10, 20, 30, 40, 50)
vector2 <- c(23, 34, 54, 65, 69)
random.num <- seq(from = 0, to = 100, by = 1)
scatter.it <- function(vector1, vector2) {
if(random.num >= 50) {
ggplot(data = diamonds, mapping = aes(vector1, vector2)) +
geom_point() +
ggtitle("Your data are beautiful!")
} else {
ggplot(data = diamonds, mapping = aes(vector1, vector2)) +
geom_point()) +
flights %>%
filter(month)
flights %>%
filter(month) %>%
group_by(dep_delay)%>%
summarize(mean(dep_delay, na.rm = TRUE))
flights %>%
filter(month) %>%
select(dep_delay) %>%
summarize(mean(dep_delay, na.rm = TRUE))
flights %>%
group_by(month) %>%
summarize(mean(dep_delay, na.rm = TRUE))
flights %>%
group_by(month) %>%
summarize(mean(dep_delay))
flights %>%
group_by(month) %>%
summarize(mean(dep_delay, na.rm = TRUE))
early.flights <- filter(flights, sched_dep_time > dep_time)
late.flights <- filter(flights, dep_delay > 60)
BOS.dest <- filter(flights, dest == "BOS")
BOS.arr <- filter(flights, origin == "BOS")
flights %>%
filter(dest == "BOS" & origin == "BOS")
ggplot(mapping = aes(BOS.arr, BOS.dest)) + geom_point() +
geom_point(data = early.flights, color = "green") +
geom_point(data = late.flights, color = "blue")
flights %>%
filter(dest == "BOS" & origin == "BOS")
filter(dest == "BOS" & origin == "BOS")
delta.flights <-
flights %>%
filter(carrier == "DL")
delta.flights <-
flights %>%
filter(carrier == "DL")
flights %>%
wde
delta.flights
delta.flights <-
flights %>%
filter(carrier == "DL")
mean(delta.flights$dep_delay)
delta.flights <-
flights %>%
filter(carrier == "DL")
mean(delta.flights$dep_delay, na.rm = TRUE)
?t.test
hist(rbinom(10000, 14, .75)/14)
pnorm(.71, mean=.75, sd = sqrt(.75*.25/14))*2
hist(rbinom(10000, 14, .75))
?t.test
?rbinom
## number of successes that read harry potter books
hist(rbinom(10000, 14, .75))
#convert to proportion of successes
hist(rbinom(10000, 14, .75)/14)
# binom.test
binom.test(10, 14, .75)
## created two tail
pbinom(10, 14, .75)*2
pnorm(.71, mean=.75, sd = sqrt(.75*.25/14))*2
binom.test(10, 14, .75)
delta.flights <-
flights %>%
filter(carrier == "DL")
delta.5.flights <-
flights %>%
filter(carrier == "DL" && dep_delay >= "5")
mean(delta.flights$dep_delay, na.rm = TRUE)
## Based on data, average delay is 9 minutes
delta.5.flights <-
flights %>%
filter(carrier == "DL" && dep_delay >= "5")
delta.5.flights
View(delta.5.flights)
View(delta.5.flights)
View(delta.flights)
View(delta.flights)
delta.flights <-
flights %>%
filter(carrier == "DL")
delta.5.flights <-
flights %>%
filter(carrier == "DL" && dep_delay >= "5", na.rm = TRUE)
delta.5.flights <-
flights %>%
filter(carrier == "DL" && dep_delay >= "5")
delta.5.flights <-
delta.flights %>%
filter(dep_delay >= "5")
View(delta.5.flights)
View(delta.5.flights)
delta.5.flights <-
delta.flights %>%
filter(dep_delay >= 5)
View(delta.5.flights)
View(delta.5.flights)
delta.5.flights <-
delta.flights %>%
filter(dep_delay >== 5)
delta.5.flights
random.num <- seq(from = 0, to = 100, by = 1)
random.num
vector1 <- c(10, 20, 30, 40, 50)
vector2 <- c(23, 34, 54, 65, 69)
random.num <- runif(1, min=0, max=100)
scatter.it <- function(vector1, vector2) {
if(random.num >= 50) {
ggplot(data = vector1) +
geom_point() +
ggtitle("Your data are beautiful!")
} else {
ggplot(data = vector2) +
geom_point()) +
vector1 <- c(10, 20, 30, 40, 50)
vector2 <- c(23, 34, 54, 65, 69)
random.num <- runif(1, min=0, max=100)
scatter.it <- function(vector1, vector2) {
if(random.num >= 50) {
ggplot(data = vector1) +
geom_point() +
ggtitle("Your data are beautiful!")
} else {
ggplot(data = vector2) +
geom_point() +
ggtitle("Your data are hideous!")
}
}
scatter.it(vector1, vector2)
vector1 <- c(10, 20, 30, 40, 50)
vector2 <- c(23, 34, 54, 65, 69)
scatter.it(vector1, vector2)
scatter.it(vector1, vector2)
ggplot(vector1, vector2) + geom_point() + ggtitle("shit")
ggplot(vector1, vector2, mapping = aes()) +
geom_point() +
ggtitle("Your data are beautiful!")
## use a random number to randomize which title the scatter plot will get
random.num <- runif(1, min=0, max=100)
combined <- c
scatter.it <- function(vector6, vector7) {
combined <- c(vector6, vector7)
if(random.num >= 50) {
ggplot(combined, mapping = aes(vector6, vector7)) +
geom_point() +
ggtitle("Your data are beautiful!")
} else {
ggplot(combined, mapping = aes(vector6, vector7)) +
geom_point() +
ggtitle("Your data are hideous!")
}
}
scatter.it(vector1, vector2)
View(flgiths)
View(flights)
early.flights <- filter(flights, sched_dep_time > dep_time)
late.flights <- filter(flights, dep_delay <= 60)
really.late.flights <- filter(flights, dep_delay > 60)
flights %>%
ggplot(mapping = aes(arr_time, dept_time)) + geom_point() +
geom_point(data = early.flights, color = "green") +
geom_point(data = late.flights, color = "blue") +
geom_point(data = really.late.flights, color = "purple")
early.flights <- filter(flights, sched_dep_time > dep_time)
late.flights <- filter(flights, dep_delay <= 60)
really.late.flights <- filter(flights, dep_delay > 60)
flights %>%
filter(origin == "BOS" | des == "BOS") %>%
ggplot(mapping = aes(arr_time, dept_time)) + geom_point() +
geom_point(data = early.flights, color = "green") +
geom_point(data = late.flights, color = "blue") +
geom_point(data = really.late.flights, color = "purple")
early.flights <- filter(flights, sched_dep_time > dep_time)
late.flights <- filter(flights, dep_delay <= 60)
really.late.flights <- filter(flights, dep_delay > 60)
flights %>%
filter(flights, origin == "BOS" | des == "BOS") %>% ## get information about the Logan Airpotr
ggplot(mapping = aes(arr_time, dept_time)) + geom_point() +
geom_point(data = early.flights, color = "green") +
geom_point(data = late.flights, color = "blue") +
geom_point(data = really.late.flights, color = "purple")
early.flights <- filter(flights, sched_dep_time > dep_time)
late.flights <- filter(flights, dep_delay <= 60)
really.late.flights <- filter(flights, dep_delay > 60)
flights %>%
filter(origin == "BOS" | dest == "BOS") %>% ## get information about BOS
ggplot(mapping = aes(arr_time, dept_time)) + geom_point() +
geom_point(data = early.flights, color = "green") +
geom_point(data = late.flights, color = "blue") +
geom_point(data = really.late.flights, color = "purple")
early.flights <- filter(flights, sched_dep_time > dep_time)
late.flights <- filter(flights, dep_delay <= 60)
really.late.flights <- filter(flights, dep_delay > 60)
flights %>%
filter(origin == "BOS" | dest == "BOS") %>% ## get information about BOS
ggplot(mapping = aes(arr_time, dep_time)) + geom_point() +
geom_point(data = early.flights, color = "green") +
geom_point(data = late.flights, color = "blue") +
geom_point(data = really.late.flights, color = "purple")
early.flights <- filter(flights, sched_dep_time > dep_time)
late.flights <- filter(flights, dep_delay <= 60)
really.late.flights <- filter(flights, dep_delay > 60)
flights %>%
filter(origin == "BOS" | dest == "BOS") %>% ## get information about BOS
ggplot(mapping = aes(arr_time, dep_time)) +
geom_point(data = early.flights, color = "green") +
geom_point(data = late.flights, color = "blue") +
geom_point(data = really.late.flights, color = "purple")
View(really.late.flights)
dep.delay.avg <- mean(dep_delay)
flights %>%
ggplot(mapping = aes(month)) +
geom_histogram(aes(dep_delay), fill ="red", alpha = .3)
flights %>%
ggplot(mapping = aes(month)) +
geom_histogram(aes(dep_delay), fill ="red")
flights %>%
ggplot(mapping = aes(month)) +
geom_histogram(aes(dep_delay), fill ="red") +
scale_x_continuous(limits = c(0,10))
flights %>%
ggplot(mapping = aes(month)) +
geom_histogram(aes(dep_delay), fill ="red") +
scale_x_continuous(limits = c(0,10))
