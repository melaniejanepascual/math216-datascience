FRR <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
plot(DET, xlim = range(0, max(FAR)), ylim = range(0, max(FRR)), main = "Detection Error Tradeoff" )
}
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(DET, xlim = range(0, max(FAR)), ylim = range(0, max(FRR)), main = "Detection Error Tradeoff" )
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(DET, xlim = range(0, max(FAR)) )
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(DET)
?plog
?plot
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(FAR, FRR)
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(FAR, FRR, xlim = max(FAR))
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(FAR, FRR, xlim = range(0,max(FAR)))
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
DET <- data.frame(FAR, FRR)
}
plot(FAR, FRR, xlim = max(FAR))
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = max(FAR))
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0,1))
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
plot(FAR, FRR, xlim = range(0,1))
}
for(threshold in seq(0.00, 0.99, 0.02)) {
FAR <- c()
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
FRR <- c()
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0,1))
FAR
FRR
FAR <- c()
FRR <- c()
for(threshold in seq(0.00, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0,1))
FAR <- c()
FRR <- c()
for(threshold in seq(0.00, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0,1), type = "l")
FAR <- c()
FRR <- c()
for(threshold in seq(0.00, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0.4,1), type = "l")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0.2 ,1), type = "l")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(1,0.2), type = "l")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0.2 ,1), type = "l")
?hist
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score >= threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score < threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0.2 ,1), type = "o")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0.2 ,1), type = "o")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0 ,1), ylim = range (0, 1)type = "o")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0 ,1), ylim = range (0, 1), type = "o")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0 , 0.8), ylim = range (0, 0.5), type = "l", col = "blue")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
?line
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- 1+x
genuine.sd <- sd(genuine.scores$score)
imposter.sd <- sd(imposter.scores$score)
genuine.mean <- mean(genuine.scores$score)
imposter.mean <- mean(imposter.scores$score)
dprime <- (sqrt(2) * abs((genuine.mean)-(imposter.mean)))/sqrt((genuine.sd^2)+(imposter.sd^2))
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
for(x in seq(0.0, 0.8, 0.1)) {
y <- x
}
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
plot(x, y, type = "l", col = "red")
?line
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
for(x in seq(0.0, 0.8, 0.1)) {
y <- x
}
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
line(x, y, col = "red")
x
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- seq(0.0, 0.8, 0.1)
y <- seq(0.0, 0.8, 0.1)
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
line(x, y, col = "red")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- seq(0.0, 0.8, 0.1)
y <- seq(0.0, 0.8, 0.1)
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
line(x, y)
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- seq(0.0, 0.8, 0.1)
y <- seq(0.0, 0.8, 0.1)
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
lines(x, y, col = "red")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- seq(0.0, 0.4, 0.1)
y <- seq(0.0, 0.4, 0.1)
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
lines(x, y, col = "red")
FAR <- c()
FRR <- c()
for(threshold in seq(0.2, 0.99, 0.02)) {
far.formula <-nrow(subset(imposter.scores, imposter.scores$score < threshold))/nrow(imposter.scores)
FAR <- c(FAR, far.formula)
frr.formula <- nrow(subset(genuine.scores, genuine.scores$score >= threshold))/nrow(genuine.scores)
FRR <- c(FRR, frr.formula)
}
x <- seq(0.0, 0.3, 0.1)
y <- seq(0.0, 0.3, 0.1)
plot(FAR, FRR, xlim = range(0 , 0.75), ylim = range (0, 0.35), type = "l", col = "blue")
lines(x, y, col = "red")
install.packages("nycflights13")
install.packages("tidyverse")
install.packages("ggplot2")
library(nycflights13)
library(tidyverse)
library(ggplot2)
flights$dep_delay > 60
# returns T/F
mean(flights$dep_delay > 60)
# returns N/A because you can't get an average of booleans
mean(flights$dep_delay > 60, na.rm = TRUE)
#returns number
flights
View(flights)
View(flights)
select(dep_delay)
flights %>%
select(dep_delay)
flights %>%
select(dep_delay)
filter(dep_delay > 60)
flights %>%
select(dep_delay) %>%
filter(dep_delay > 60)
flights %>%
select(dep_delay) %>%
filter(dep_delay > 60) %>%
group_by(carrier)
summarise(arrange(carrier))
flights %>%
select(dep_delay) %>%
filter(dep_delay > 60) %>%
group_by(carrier)
flights$carrier
flights %>%
select(dep_delay) %>%
filter(dep_delay > 60) %>%
group_by(carrier) %>%
summarize(mean(flights$carrier), na,rm=TRUE)
flights %>%
group_by(carrier) %>%
summarize(carrier.avg = mean(dep_delay > 60 , na,rm=TRUE)) %>%
arrange(desc(carrier.avg)) %>%
mutate(Rank = rank(-carrier.avg))
elayed more than an hour. (dep delay)
flights %>%
group_by(carrier) %>%
summarize(carrier.avg = mean(dep_delay > 60 , na.rm=TRUE)) %>%
arrange(desc(carrier.avg)) %>%
mutate(Rank = rank(-carrier.avg))
flights %>%
group_by(carrier) %>%
summarize(carrier.avg = mean(dep_delay > 60 , na.rm=TRUE)) %>%
arrange(desc(carrier.avg)) %>%
mutate(Rank = rank(-carrier.avg)) %>%
filter(Rank <= 10) %>%
ggplot(mapping = aes(x = carrier, carrier.avg)) + geom_bar(stat = "identity")
# Construct a bar graph of the "Top 10" carriers with the highest proportion
# of flights delayed more than an hour. (dep delay)
flights %>%
group_by(carrier) %>%
summarize(carrier.avg = mean(dep_delay > 60 , na.rm=TRUE)) %>%
arrange(desc(carrier.avg)) %>%
mutate(Rank = rank(-carrier.avg)) %>%
filter(Rank <= 10) %>%
ggplot(mapping = aes(x = reorder(carrier, carrier.avg), carrier.avg)) + geom_bar(stat = "identity")
flights %>%
group_by(carrier) %>%
summarize(carrier.avg = mean(dep_delay > 60 , na.rm=TRUE)) %>%
arrange(desc(carrier.avg)) %>%
mutate(Rank = rank(-carrier.avg)) %>%
filter(Rank <= 10) %>%
ggplot(mapping = aes(x = reorder(carrier, carrier.avg), carrier.avg)) +
geom_bar(stat = "identity", aes(fill = carrier))
## Create a function
favNum <- function(x) {
num <- paste(c("Alex's favorite number is", x, "."), collapse = " ")
return(num)
}
favNum(12)
t.test(1)
t.test(10()
z
t.test(10)
?t.test
t.test(10, 30, 50)
t.test2 <- function(x, mu) {
x.bar  <- mean(x, na.rm =TRUE)
s      <- sd(x)
n      <- length(x)
t.stat <- (x.bar-mu)/(s/sqrt(n))
p.val <- pt(t.stat, n-1)
return(p.val)
}
View(favNum)
mj <- 3
paste(c("MJ", "likes", "the", "num", mj), collapse=" ")
mj.fav.num <- 3
paste(c("MJ", "likes", "the", "num", mj), collapse=" ")
#solution 2
super.dataset <- NULL
for (i in 1:3) {
# read in dataset
current.dataset <- read.csv(file = paste(c("dataset", i, ".csv"),
collapse=""))
# attach dataset to other datasets to make super dataset
super.dataset <- rbind(super.dataset, current.dataset)
}
SAT <- rnorm(100000, 600, 100)
## Try breaking the central limit theorem
# small sample size
SAT <- rnorm(100000, 600, 100)
mean.vector <- NULL
for(i in 1:100000){
mean.vector[i] <- mean(sample(SAT, 2))
}
hist(mean.vector)
# small sample size & weird population distribution
test.scores <-c(98.95,92,88,86,84,84, 20,14)
mean.vector <- NULL
for(i in 1:100000){
mean.vector[i] <- mean(sample(test.scores, 2, replace = TRUE))
}
hist(mean.vector)
#sample size 50
test.scores3 <-c(98.95,92,88,86,84,84, 20,14)
mean.vector <- NULL
for(i in 1:100000){
mean.vector[i] <- mean(sample(test.scores3, 50, replace = TRUE))
}
hist(mean.vector)
library(nycflights13)
ggplot(flights, aes(dep_delay)) + geom_histogram()
library(nycflights13)
library(ggplot2)
ggplot(flights, aes(dep_delay)) + geom_histogram()
ggplot(flights, aes(dep_delay)) + geom_histogram()
flights %>%
filter(carrier == "DL") %>%
summarize(mean.delay = mean(dep_delay, na.rm = TRUE, n=n()))
39.74/sqrt(48110)
pnorm(9.26, 5, .18, lower.tail=FALSE)
39.74/sqrt(48110)
pnorm(9.26, 5, .18, lower.tail=FALSE)
library(tidyverse)
bball <- read.csv(file = "Basketball.csv")
setwd("~/Developments/math216-datascience")
setwd("~/Developments/math216-datascience/lectures")
library(tidyverse)
bball <- read.csv(file = "Basketball.csv")
View(bball)
library(tidyverse)
bball <- read.csv(file = "Basketball.csv")
playoff.teams <- bball %>%
group_by(Team) %>%
select(Team, NCAA == "1") %>%
summarise(pval=t.test(NCAA, mu = .196)$p.val) %>%
arrange(pval)
playoff.teams <- bball %>%
group_by(NCAA) %>%
select(Team, NCAA == "1") %>%
summarise(pval=t.test(NCAA, mu = .196)$p.val) %>%
arrange(pval)
bball %>%
group_by(NCAA) %>%
select(Team, Blocks) %>%
summarise(p.val = t.test(Blocks, mu=130)$p.val) %>%
filter(p.val <= 0.05)
bball %>%
group_by(Team) %>%
select(Team, Blocks) %>%
summarise(p.val = t.test(Blocks, mu=130)$p.val) %>%
filter(p.val <= 0.05) %>%
arrange(p.val)
## do with no bonferroni correction
bball %>%
group_by(Team) %>%
select(Team, Blocks) %>%
summarise(p.val = t.test(Blocks, mu=130)$p.valm
t.stat = t.test(Blocks, mu=130)$statistic) %>%
filter(p.val <= 0.05/73) %>%
arrange(p.val)
# do with bonferroni correction
## do with no bonferroni correction
bball %>%
group_by(Team) %>%
select(Team, Blocks) %>%
summarise(p.val = t.test(Blocks, mu=130)$p.val,
t.stat = t.test(Blocks, mu=130)$statistic) %>%
filter(p.val <= 0.05) %>%
arrange(p.val)
# do with bonferroni correction
bball %>%
group_by(Team) %>%
select(Team, Blocks) %>%
summarise(p.val = t.test(Blocks, mu=130)$p.val,
t.stat = t.test(Blocks, mu=130)$statistic) %>%
filter(p.val <= 0.05/73) %>%
arrange(p.val)
p.adjust(c(0.05, 0.01, .00000001), method = "bonferroni")
