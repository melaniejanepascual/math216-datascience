babynames %>%
filter(year == testYear)
arrange(year, prop)
babynames %>%
filter(year == testYear)
arrange(year, prop)
runApp('Developments/math216-datascience/lectures/10.27/10.27')
runApp('Developments/math216-datascience/lectures/10.27/babyname')
install.packages("okcupiddata")
library(okcupiddata)
data(profiles)
view(profiles)
View(profiles)
install.packages("okcupiddata")
library(okcupiddata)
data(profiles)
View(profiles)
adventurous <-
profiles %>%
library(rvest)
library(leaflet)
library(tidyverse)
library(ggplot2)
library(okcupiddata)
onlywhites <- profiles %>% filter(ethnicity == "white")
View(onlywhites)
includingwhite <-profiles %>% filter(grepl("white", ethnicity))
View(includingwhite)
vegan <- profiles %>%
filter(grepl("strictly vegan", diet))
View(vegan)
profiles %>%
ggplot() + geom_bar(mapping = aes(x=body_type))
adventurous <-
profiles %>%
filter(grepl("adventurous", essay0))
library(tidyverse)
adventurous <-
profiles %>%
filter(grepl("adventurous", essay0))
adventurous
View(adventurous)
library("png")
filepath = "~/Developments/csci454-biometrics/hw/hw02/trainingfaces2/"
filenames = list.files(filepath, pattern = "*.png")
fullpathnames = paste(filepath, filenames, sep="")
images <- c()
for(i in 1:length(fullpathnames)) {
images <- cbind(images, as.vector(readPNG(i)))
}
filepath = "~/Developments/csci454-biometrics/hw/hw02/trainingfaces2/"
filenames = list.files(filepath, pattern = "*.png")
fullpathnames = paste(filepath, filenames, sep="")
images <- c()
for(i in 1:length(fullpathnames)) {
images <- cbind(images, as.vector(readPNG(i)))
}
filepath = "~/Developments/csci454-biometrics/hw/hw02/trainingfaces2/"
images <- cbind(images, as.vector(readPNG(filespath[i])))
images <- c()
for(i in 1:length(fullpathnames)) {
images <- cbind(images, as.vector(readPNG(filespath[i])))
}
images <- cbind(images, as.vector(readPNG(fullpathnames[i])))
filepath = "~/Developments/csci454-biometrics/hw/hw02/trainingfaces2/"
filenames = list.files(filepath, pattern = "*.png")
fullpathnames = paste(filepath, filenames, sep="")
images <- c()
for(i in 1:length(fullpathnames)) {
images <- cbind(images, as.vector(readPNG(fullpathnames[i])))
}
View(adventurous)
View(adventurous)
View(images)
View(images)
?sweep
the.mean <- sweep(images, 1, mean)
the.mean <- sweep(images, 1, rowMean(the.mean))
the.mean <- sweep(images, 1, rowMean(images
?t
?t
x.matrix <- t(the.mean)
?t
x.matrix <- t(the.mean)
the.mean <- sweep(images, 1, rowMean(images))
the.mean <- sweep(images, 1, rowMeans(images))
x.matrix <- t(the.mean)
View(x.matrix)
View(x.matrix)
the.mean <- abs(sweep(images, 1, rowMeans(images)))
the.mean <- sweep(images, 1, rowMeans(images))
the.mean <- sweep(images, 1, rowMeans(images))
x.matrix <- t(the.mean)
x.matrix <- t(the.mean)
covariance <- the.mean * x.matrix
x.matrix <- t(the.mean)
xt <- t(x.matrix)
covariance <- x.matrix * x
x.matrix <- t(the.mean)
xt <- t(x.matrix)
covariance <- x.matrix * xt
x.matrix <- t(the.mean)
xt <- t(x.matrix)
covariance <- %x.matrix * xt%;
x.matrix <- t(the.mean)
xt <- t(x.matrix)
covariance <- x.matrix %*% xt;
library("png")
filepath = "~/Developments/csci454-biometrics/hw/hw02/trainingfaces2/"
filenames = list.files(filepath, pattern = "*.png")
fullpathnames = paste(filepath, filenames, sep="")
images <- c()
for(i in 1:length(fullpathnames)) {
images <- cbind(images, as.vector(readPNG(fullpathnames[i])))
}
the.mean <- sweep(images, 1, rowMeans(images))
x.matrix <- t(the.mean)
xt <- t(x.matrix)
covariance <- x.matrix %*% xt;
covariance.matrix <- x.matrix %*% xt;
View(covariance)
covariance <- x.matrix %*% xt;
covariance.matrix <- t(covarience)
covariance <- x.matrix %*% xt;
ev = eigen(covariance)
covariance <- x.matrix %*% xt;
ev = eigen(covariance)
ev = eigen(covariance)
ten.eigen.vectors <- ev$vectors[,10]
eigen.transpose <- t(ten.eigen.vectors)
eigen.transpose <- t(ten.eigen.vectors)
ten.eigen.vectors <- ev$vectors[,10]
eigentranspose <- t(ten.eigen.vectors)
et <- t(ten.eigen.vectors)
weights <- et %*% x
weights <- et %*% x.matrix
filepath.test = "~/Developments/csci454-biometrics/hw/hw02/testingfaces2/"
filenames.test = list.files(filepath.test, pattern = "*.png")
fullpathnames.test = paste(filepath.test, filenames,test, sep="")
filepath.test = "~/Developments/csci454-biometrics/hw/hw02/testingfaces2/"
filenames.test = list.files(filepath.test, pattern = "*.png")
fullpathnames.test = paste(filepath.test, filenames.test, sep="")
images.test <- c()
for(i in 1:length(fullpathnames.test)) {
images.test <- cbind(images.test, as.vector(readPNG(fullpathnames.test[i])))
}
images.test <- c()
for(i in 1:length(fullpathnames.test)) {
d <- as.vector(readPNG(fullpathnames.test[i]))
images.test <- cbind(images.test, et %*% d)
}
d <- c(as.vector(readPNG(fullpathnames.test[i])))
images.test <- cbind(images.test, et %*% d)
filepath.test = "~/Developments/csci454-biometrics/hw/hw02/testingfaces2/"
filenames.test = list.files(filepath.test, pattern = "*.png")
fullpathnames.test = paste(filepath.test, filenames.test, sep="")
images.test <- c()
for(i in 1:length(fullpathnames.test)) {
d <- c(as.vector(readPNG(fullpathnames.test[i])))
images.test <- cbind(images.test, et %*% d)
}
images.test <- c()
for(i in 1:length(fullpathnames.test)) {
d <- c(as.vector(readPNG(fullpathnames.test[i])))
y <- et %*% d
images.test <- cbind(images.test, y)
}
View(et)
View(et)
ten.eigen.vectors <- ev$vectors[,10]
et <- t(ten.eigen.vectors)
View(et)
View(et)
ten.eigen.vectors <- ev$vectors[,10]
view(ten.eigen.vectors)
View(ten.eigen.vectors)
ten.eigen.vectors <- ev$vector[,10]
View(ten.eigen.vectors)
ten.eigen.vectors <- ev$vectors[,1:10]
et <- t(ten.eigen.vectors)
View(ten.eigen.vectors)
filepath.test = "~/Developments/csci454-biometrics/hw/hw02/testingfaces2/"
filenames.test = list.files(filepath.test, pattern = "*.png")
fullpathnames.test = paste(filepath.test, filenames.test, sep="")
images.test <- c()
for(i in 1:length(fullpathnames.test)) {
d <- c(as.vector(readPNG(fullpathnames.test[i])))
y <- et %*% d
images.test <- cbind(images.test, y)
}
images.test <- cbind(images.test, y)
images.test <- c()
for(i in 1:length(fullpathnames.test)) {
d <- c(as.vector(readPNG(fullpathnames.test[i])))
y <- et %*% d
images.test <- cbind(images.test, y)
}
y <- (et %*% d)
y <- (et %*% d)
d <- c(as.vector(readPNG(fullpathnames.test[i])))
y <- (et %*% d)
View(d)
View(d)
View(d)
View(d)
d <- cbind(as.vector(readPNG(fullpathnames.test[i])))
d <- cbind(as.vector(readPNG(fullpathnames.test[i])))
library("png")
d <- cbind(as.vector(readPNG(fullpathnames.test[i])))
images.test <- c()
for(i in 1:length(fullpathnames.test)) {
d <- cbind(as.vector(readPNG(fullpathnames.test[i])))
y <- (et %*% d)
images.test <- cbind(images.test, y)
}
images.test <- cbind(images.test, et %*% d)
images.test <- c(images.test, et %*% d)
View(et)
images.test <- c()
for(i in 1:length(fullpathnames.test)) {
d <- cbind(as.vector(readPNG(fullpathnames.test[i])))
images.test <- cbind(images.test, et %*% d)
}
View(et)
images.test <- c()
for(i in 1:length(fullpathnames.test)) {
d <- cbind(as.vector(readPNG(fullpathnames.test[i])))
images.test <- cbind(images.test, et %*% d)
}
dim(d)
dim(et)
View(et)
dim(x.matrix)
View(x.matrix)
dim(covariance)
dim(images)
dim(the.mean)
dim(xt)
dim(x.matrix)
the.mean <- sweep(images, 2, rowMeans(images))
rowMeans(images)
dim(rowMeans(images))
xmean <- apply(x.matrix, 2, rowMeans(x.matrix))
xmean <- apply(x.matrix, 2, x-rowMeans(x.matrix))
xmean <- apply(x.matrix, 2, x.matrix-rowMeans(x.matrix))
xmean <- apply(x.matrix, 2, x.matrix - xmean)
the.mean <- rowMeans(images)
dim(the.mean)
View(the.mean)
?apply
xmean <- apply(x.matrix, 2, x.matrix - xmean)
xmean <- apply(x.matrix, 2, x.matrix - the.mean)
xmean <- apply(x.matrix, 2, function(x) x-the.mean)
xmean
View(xmean)
dim(xmean)
xmean <- apply(x.matrix, 1, function(x) x-the.mean)
View(xmean)
dim(xmean)
images.test <- c()
for(i in 1:length(fullpathnames.test)) {
d <- cbind(as.vector(readPNG(fullpathnames.test[i])))
images.test <- cbind(images.test, et %*% d)
}
x.matrix <- t(xmean)
xt <- t(x.matrix)
dim(x.matrix)
xt.matrix <- t(xmean)
covariance <- x.matrix %*% xt.matrix;
View(x.matrix)
View(x.matrix)
xmean <- apply(x.matrix, 1, function(x) x-the.mean)
View(x.matrix)
View(x.matrix)
View(images)
View(images)
xmean <- apply(images, 1, function(x) x-the.mean)
View(xmena)
View(xmeab)
View(xmean)
dim(images)
library("png")
filepath = "~/Developments/csci454-biometrics/hw/hw02/trainingfaces2/"
filenames = list.files(filepath, pattern = "*.png")
fullpathnames = paste(filepath, filenames, sep="")
images <- c()
for(i in 1:length(fullpathnames)) {
images <- cbind(images, as.vector(readPNG(fullpathnames[i])))
}
the.mean <- rowMeans(images)
xmean <- apply(images, 1, function(x) x-the.mean)
xt.matrix <- t(xmean)
covariance <- x.matrix %*% xt.matrix;
ev = eigen(covariance)
dim(covariance)
hist(genuine.scores$score, col = rgb(1,0,0,0.5), main = "Genuine and Imposter Distribution", xlab = "Distance Scores", ylab = "Frequency", freq = FALSE)
library(babynames)
View(babynames)
?babynames
View(babynames)
ggplot(df, aes(x=date)) +
geom_area(aes(y=consultant, fill="consultant")) +
geom_area(aes(y=instructor, fill="instructor")) +
geom_area(aes(y=research.assistant, fill="research.assistant")) +
labs(title="Alex's Income in Verious Jobs",
y="Income ($)") +  # title and caption
scale_x_date(labels = lbls, breaks = brks) +  # change to monthly ticks and labels
scale_fill_manual(name="",
values = c("consultant"="blue", "instructor"="yellow", "research.assistant" = "red")) +
# ggplot2 library
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
# DATA
set.seed(345)
Sector <- rep(c("S01","S02","S03","S04","S05","S06","S07"),times=7)
Year <- as.numeric(rep(c("1950","1960","1970","1980","1990","2000","2010"),each=7))
Value <- runif(49, 10, 100)
data <- data.frame(Sector,Year,Value)
data
ggplot(data, aes(x=Year, y=Value, fill=Sector)) +
geom_area()
ggplot(data, aes(x=Year, y=Value, fill=Sector)) +
geom_area()
example <- ggplot(data, aes(x=Year, y=Value, fill=Sector)) +
geom_area()
example
Sector <- rep(c("S01","S02","S03","S04","S05","S06","S07"),times=7)
Year <- as.numeric(rep(c("1950","1960","1970","1980","1990","2000","2010"),each=7))
Value <- runif(49, 10, 100)
data <- data.frame(Sector,Year,Value)
example <- ggplot(data, aes(x=Year, y=Value, fill=Sector)) +
geom_area()
example
?rep
example <- ggplot(data, aes(x=Year, y=Value, fill=Sector)) +
labs(title="Alex's Income in Verious Jobs", y="Income ($)") +
geom_area()
example
job <- c("Consultant","Instructor","Research Assistant"), times=3)
# DATA
job <- c("Consultant","Instructor","Research Assistant") times=3)
job <- c("Consultant","Instructor","Research Assistant")
year <- as.numeric(rep(c("2012","2013","2014","2015","2016"), each=5))
Value <- runif(49, 10, 100)
data <- data.frame(job,year, value)
job <- c("Consultant","Instructor","Research Assistant")
year <- as.numeric(rep(c("2012","2013","2014","2015","2016"), each=5))
value <- c(20000, 40000, 35000)
data <- data.frame(job,year, value)
# DATA
job <- c("Consultant","Instructor","Research Assistant")
year <- as.numeric(c("2012","2013","2014","2015","2016"), each=5)
value <- c(20000, 40000, 35000)
data <- data.frame(job, year, value)
# DATA
job <- c("Consultant","Instructor","Research Assistant")
year <- as.numeric(c("2012","2013","2014","2015","2016"), each=5)
value <- c(20000, 40000, 35000, 10000, 20000)
data <- data.frame(job, year, value)
df <- data.frame(
job = factor(rep(c("Consultant","Instructor","Research Assistant"), each=200)),
year = as.numeric(c("2012","2013","2014","2015","2016"), each=5)
)
df
df <- data.frame(
job = factor(rep(c("Consultant","Instructor","Research Assistant"))),
year = as.numeric(c("2012","2013","2014","2015","2016"), each=5)
)
# create data frame
job <- c("Consultant","Instructor","Research Assistant")
year <- c(2012, 2013, 2014, 2015, 2016)
income <- c(20000, 40000, 35000, 10000, 20000)
df <- data.frame(job, year, income)
View(babynames)
setwd("~/Developments/math216-datascience/midterm2")
alex <- read.csv(file="alex.csv")
alex <- read.csv(file="alex.csv")
alex
View(alex)
alex <- read.csv(file="alex.csv", header = TRUE)
View(alex)
alex <- read.xls(file="alex.xlsx", header = TRUE)
alex <- read.xls(file="alex.xlsx", header = TRUE)
alex <- read.table(file="alex.xlsx", header = TRUE)
alex <- read.table(file="alex.xlsx", header = TRUE)
alex <- read.table(file="alex.xlsx", header = TRUE)
alex <- read.table(file="alex.xls", header = TRUE)
?read.tbale
?read.table
alex <- read.csv(file="alex.csv", header = FALSE)
View(alex)
alex <- read.csv(file="alex.csv", header = FALSE)
View(alex)
alex <- read.csv(file="alex.csv", header = TRUE)
View(alex)
alex <- read.csv(file="alex.csv")
View(alex)
bball <- read.csv(file="Basketball.csv")
View(bball)
alex <- read.csv(file="alex.csv")
View(alex)
alex <- read.csv(file="alex.csv")
View(alex)
alex.income <- ggplot() +
labs(title="Alex's Income in Various Jobs", y="Income ($)") +
geom_area(aes(y = job, x = year, fill = income), data = alex, stat="identity")
alex.income
alex
alex.income <- ggplot(alex, aes(y = job, x = year, fill = income)) +
labs(title="Alex's Income in Various Jobs", y="Income ($)") +
geom_area(stat="identity")
alex.income
alex.income <- ggplot(alex, aes(y = job, x = year, fill = income)) +
labs(title="Alex's Income in Various Jobs", y="Income ($)") +
geom_area()
alex.oincome
alex.income
alex.income <- ggplot(alex, aes(y = job, x = as.numeric(year), fill = as.numeric(income))) +
labs(title="Alex's Income in Various Jobs", y="Income ($)") +
geom_area()
View(alex)
alex.income
alex.income <- ggplot(alex, aes(y = job, x = as.numeric(year), fill = as.numeric(income))) +
labs(title="Alex's Income in Various Jobs", y="Income ($)") +
geom_area(stat="bin")
alex.income
alex.income <- ggplot(alex, aes(y = job, x = as.numeric(year), fill = as.numeric(income))) +
labs(title="Alex's Income in Various Jobs", y="Income ($)") +
geom_area(stat="identity")
alex.income
alex.income
alex.income <- ggplot(alex, aes(y = income, x = as.numeric(year), fill = as.numeric(income))) +
geom_area(stat="identity")
alex.income
alex.income <- ggplot(alex, aes(y = income, x = year, fill = as.numeric(income))) +
geom_area(stat="identity")
alex.income
alex <- read.csv(file="alex.csv")
alex.income <- ggplot(data = alex) +
geom_area(aes(y = income, x = year, fill = as.numeric(income)))
alex.income
alex.income <- ggplot(data = alex, aes(x = year, y = income)) +
geom_area()
alex <- read.csv(file="alex.csv")
year <- as.numeric(alex$year)
income <- as.numeric(alex$income)
alex.income <- ggplot(data = alex, aes(x = year, y = income)) +
geom_area()
alex.income <- ggplot(data = alex, aes(x = year, y = income)) +
geom_area()
alex.income
alex.income <- ggplot(data = alex, aes(x = year, y = income)) +
labs(title="Alex's Income in Various Jobs", y="Income ($)") +
geom_area()
ggplot(data = alex, aes(x = year, y = income)) +
labs(title="Alex's Income in Various Jobs", y="Income ($)") +
geom_area()
ggplot(data = alex, aes(x = year, y = income, fill=income)) +
labs(title="Alex's Income in Various Jobs", y="Income ($)") +
geom_area()
View(alex)
ra.income <- alex %>%
filter(job == "research assistant")
library(tidyverse)
ra.income <- alex %>%
filter(job == "research assistant")
ra.income <- alex %>%
filter(job == "research assistant")
alex.income <- ggplot(data = alex) +
labs(title="Alex's Income in Various Jobs", y="Income ($)") +
geom_area(aes(x = year, y = ra.income))
alex.income
ra.income <- as.numeric(alex %>%
filter(job == "research assistant"))
earch assistant")
alex.income <- ggplot(data = alex) +
labs(title="Alex's Income in Various Jobs", y="Income ($)") +
geom_area(aes(x = year, y = ra.income, fill = ra.income))
alex.income
ra.income <- alex %>%
filter(job == "research assistant")
ra.income
ra.income <- alex %>%
filter(job == "research assistant") %>%
select(income)
ra.income
alex.income <- ggplot(data = alex) +
labs(title="Alex's Income in Various Jobs", y="Income ($)") +
geom_area(aes(x = year, y = ra.income))
alex.income
alex.income <- ggplot(data = alex) +
labs(title="Alex's Income in Various Jobs", y="Income ($)") +
geom_area(aes(x = year, y = ra.income, fill = income))
alex.income
c.income <- alex %>%
filter(job == "consultant") %>%
select(income)
i.income <- alex %>%
filter(job == "instructor") %>%
select(income)
alex.income <- ggplot(data = alex) +
labs(title="Alex's Income in Various Jobs", y="Income ($)") +
geom_area(aes(x = year, y = ra.income, fill = income)) +
geom_area(aes(x = year, y = income, fill = c.income))
alex.income
?legend
legend("bottom", c("consultant","instructor","research assistant"))
alex.income <- ggplot(data = alex) +
geom_area(aes(x = year, y = income, fill = job)) +
labs(title="Alex's Income in Various Jobs", y="Income ($)")
alex.income
